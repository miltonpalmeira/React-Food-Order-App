{"ast":null,"code":"import _slicedToArray from\"C:/Users/milton.santana/Documents/CURSOS/Udemy/Food Order App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from\"react\";import classes from\"./Checkout.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()===\"\";};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);setFormInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalCode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPostalCodeIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,postalCode:enteredPostalCode});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?\"\":classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.street?\"\":classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.postalCode?\"\":classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.city?\"\":classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid postal Code (5 caracteres long)!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","name","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"sources":["C:/Users/milton.santana/Documents/CURSOS/Udemy/Food Order App/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        city: enteredCity,\r\n        postalCode: enteredPostalCode\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div\r\n        className={nameControlClasses}\r\n      >\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal Code (5 caracteres long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}